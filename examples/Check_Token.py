from solana.rpc.types import TokenAccountOpts
from solders.solders import Pubkey
from examples.Connect import get_connection
from examples.Wallet import load_wallet


def get_token_balance(pubkey: Pubkey, mint_address: str, network="devnet"):
    """
    –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞.
    """
    try:
        client = get_connection(network, debug=False)
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
        mint_pubkey = Pubkey.from_string(mint_address)

        # –ó–∞–ø—Ä–æ—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω-–∞–∫–∫–∞—É–Ω—Ç–∞
        resp = client.get_token_accounts_by_owner(
            pubkey,
            TokenAccountOpts(mint=mint_pubkey)
        )

        if resp.value and len(resp.value) > 0:
            # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
            balance_resp = client.get_token_account_balance(resp.value[0].pubkey)
            if balance_resp.value:
                token_amount = balance_resp.value.ui_amount or 0
                return {
                    "mint": mint_address,
                    "amount": token_amount,
                    "account": str(resp.value[0].pubkey)
                }

        # –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–ª–µ–≤–æ–π –±–∞–ª–∞–Ω—Å
        return {
            "mint": mint_address,
            "amount": 0.0,
            "account": None
        }
    except Exception as err:
        ...


if __name__ == "__main__":
    wallet = load_wallet("file", "../wallet.json", network="mainnet", get_balance=False)
    wallet_pubkey = wallet.pubkey()

    # –ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ USDT (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥)
    print("\nüîπ –ë–∞–ª–∞–Ω—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å):")
    usdt_address = 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB'
    print("–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å USDT...")
    usdt_balance = get_token_balance(wallet_pubkey, usdt_address, "mainnet")
    print(f"USDT: {usdt_balance['amount']}")
